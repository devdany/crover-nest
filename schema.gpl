# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  country: String!
  state: String!
  city: String!
  detail: String!
  postalCode: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Job {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  position: String!
  experienceYears: Float!
  type: Float!
}

type Portfolio {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  projects: [Project!]!
  user: User!
}

type Comment {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  user: User!
  post: Post!
  text: String!
}

type Post {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  title: String!
  user: User!
  tags: [Tag!]!
  likeCount: Int!
  thumbnail: Image!
  images: [Image!]!
  comments: [Comment!]!
  content: String!
  project: Project!
}

type Tag {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  name: String!
}

type Project {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  startedAt: DateTime!
  endedAt: DateTime!
  title: String!
  description: String!
  thumbnail: Image!
  images: [Image!]!
  location: Address!
  members: [User!]!
  portfolio: Portfolio!
  tags: [Tag!]!
}

type Image {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  originalSrc: String!
  pressedSrc: String!
  filename: String!
  mimetype: String!
  encoding: String!
  user: User!
  project: Project!
  post: Post!
}

type Profile {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  introduce: String!
  tel: String!
  address: Address!
  jobs: [Job!]!
  image: Image!
}

type Message {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  sender: User!
  receiver: User!
  contest: String!
}

type Notification {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  user: User!
}

type User {
  id: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  name: String!
  isCertificated: Boolean!
  isOnBoarding: Boolean!
  username: String!
  email: String!
  emailVerified: Boolean!
  profile: Profile!
  album: [Image!]!
  projects: [Project!]!
  portfolio: Portfolio!
  posts: [Post!]!
  comments: [Comment!]!
  sendMessages: [Message!]!
  receiveMessages: [Message!]!
  notifications: [Notification!]!
}

type Query {
  user(username: String!): User!
}

type Mutation {
  createOneUser(userInput: CreateUserInput!): User!
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
}
